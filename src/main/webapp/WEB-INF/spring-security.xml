<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:beans="http://www.springframework.org/schema/beans"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
                           http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">


  <!-- Configure Spring-Security  -->
  <global-method-security pre-post-annotations="enabled" proxy-target-class="true"/>

  <http auto-config="true" use-expressions="true">

    <access-denied-handler error-page="/denied" />  
 
    <form-login
      login-processing-url="/j_spring_security_check"
      login-page="/login"
      username-parameter="userName"
      password-parameter="password"
      authentication-failure-url="/login?error=true"/>
    
    <logout
      invalidate-session="true"
      logout-success-url="/login"
      logout-url="/j_spring_security_logout"/>

    <!-- enable csrf protection -->
    <csrf/>

  </http>
  
  <!-- Declare an authentication-manager to use a custom userDetailsService -->
  <authentication-manager>
    <authentication-provider user-service-ref="userDetailsService">
     <password-encoder ref="passwordEncoder"/>
    </authentication-provider>
  </authentication-manager>
  
  <!-- Use a Md5 encoder since the user's passwords are stored as Md5 in the database -->
  <beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.Md5PasswordEncoder"/>

</beans:beans>

